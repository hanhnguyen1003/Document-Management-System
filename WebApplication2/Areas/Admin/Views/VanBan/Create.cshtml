@model Models.ViewModel.VanBanCreateDto

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<head>
    <meta http-equiv="content-type" content="text/html" ; charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link href="~/wwwroot/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Assets/admin/plugins/jquery/jquery-ui.css" rel="stylesheet" />
    <link href="~/Assets/admin/plugins/jquery/jquery.datetimepicker.min.css" rel="stylesheet" />

</head>


@section jsFooter{
    <script>
        $('#btnSelectimage').on('click', function (e) {
            e.preventDefault();
            var finder = new CKFinder();
            finder.selectActionFunction = function (url) {
                $('#txtImage').val(url)
            };
            finder.popup();
        })
    </script>
}
@section jsSelected{
    <script>

        $(document).ready(function () {
            $('btnResult').click(function () {
                var selected = $('#listID option:selected');
                if (selected.length > 0) {
                    var result = '';
                    selected.each(function () {
                        result = 'Value:' + $(this).val() + ".text:" + $(this).text();
                    });

                    $('#divResult').html(result);
                }

                else {
                    $('#divResult').html('No selected');

                }
            });
        });
    </script>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <section class="content-wrapper">
        <!-- Content Header (Page header) -->
        <section class="content-header">
            <div class="container-fluid">
                <div class="row mb-2">
                    <div class="col-sm-12">
                        <h1 style="color:royalblue;text-align:center;padding-right:15px;
                            display:block;font-family:'Times New Roman', Times, serif">
                            <b>PHÁT HÀNH VĂN BẢN</b>
                        </h1>
                    </div>
                    <div class="col-sm-12">
                        <ol class="breadcrumb float-sm-right">
                            <li class="breadcrumb-item"><a href="/Admin/VanBan/Index">Trang chủ</a></li>
                            <li class="breadcrumb-item active">Thêm</li>
                        </ol>
                    </div>
                </div>
            </div><!-- /.container-fluid -->
        </section>
        <!-- Main content -->

        <div class=" form-inline">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="col-md-6">
                <div class="form-group">
                    <div clas="col-md-6" style="padding-left:100px">
                        @Html.LabelFor(model => model.SO_VAN_BAN, htmlAttributes: new {
                       @class = "control-label col-md-12" })
                    </div>
                    <div>
                        @Html.TextBoxFor(model => model.SO_VAN_BAN, htmlAttributes: new {
                       @class = "form-control",
                       @style = "border: 1px solid #666666;width:190px"
                   })
                        @Html.ValidationMessageFor(model => model.SO_VAN_BAN, "", new {
                       @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    <div clas="col-md-6" style="padding-left:126px">
                        @Html.LabelFor(model => model.ID_VAN_BAN, htmlAttributes: new {
                       @class = "control-label col-md-12" })
                    </div>
                    <div>
                        @Html.TextBoxFor(model => model.ID_VAN_BAN, htmlAttributes: new
                   {
                       @class = "form-control",
                       @style = "border: 1px solid #666666;width:190px"
                   })
                        @Html.ValidationMessageFor(model => model.ID_VAN_BAN, "", new {
                       @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group" style="padding-top:15px">
                    <div clas="col-md-6" style="padding-left:113px">
                        @Html.LabelFor(model => model.NGUOI_KY, htmlAttributes: new {
                       @class = "control-label col-md-12" })
                    </div>
                    <div>
                        @Html.TextBoxFor(model => model.NGUOI_KY, htmlAttributes: new
                   {
                       @class = "form-control",
                       @style = "border: 1px solid #666666;width:190px"
                   })
                        @Html.ValidationMessageFor(model => model.NGUOI_KY, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-6" style="padding-left:31px">
                <div class="form-group" style="padding-top:15px;padding-left:136px">
                    <div clas="col-md-6">
                        @Html.LabelFor(model => model.NGAY_KY, htmlAttributes: new {
                       @class = "control-label col-md-12" })
                    </div>
                    <div>
                        @Html.TextBoxFor(model => model.NGAY_KY, htmlAttributes: new { @class = "form-control", @style = "border: 1px solid #666666;width:190px",
                       @id = "datesign",
                       @readonly = "true",

                   })
                        @Html.ValidationMessageFor(model => model.NGAY_KY, "", new {
                       @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group" style="padding-top:15px;padding-left:75px">
                    <div clas="col-md-6">
                        @Html.LabelFor(model => model.ID_NOI_PHAT_HANH, htmlAttributes: new {
                       @class = "control-label col-md-12" })
                    </div>

                    @Html.DropDownListFor(model => model.ID_NOI_PHAT_HANH, null, htmlAttributes: new { @class = "form-control", @style = "border: 1px solid #666666;width:190px", @id = "myId" })
                    @Html.ValidationMessageFor(model => model.ID_NOI_PHAT_HANH, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group" style="padding-top:15px;padding-left:132px">
                    <div clas="col-md-6">
                        @Html.LabelFor(model => model.NGAY_NHAN, htmlAttributes: new {
                       @class = "control-label col-md-12" })
                    </div>
                    <div>
                        @Html.TextBoxFor(model => model.NGAY_NHAN, htmlAttributes: new
                   {
                       @class = "form-control",
                       @style = "border: 1px solid #666666;width:190px",
                       @id = "datereceive",
                       @readonly = "true",

                   })

                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group" style="padding-top:15px;padding-left:88px">
                    <div clas="col-md-6">
                        @Html.LabelFor(model => model.ID_LOAI_VAN_BAN, htmlAttributes: new {
                       @class = "control-label col-md-12" })
                    </div>
                    <div>
                        @Html.DropDownListFor(model => model.ID_LOAI_VAN_BAN, null, htmlAttributes: new { @class = "form-control", @style = "border: 1px solid #666666;width:190px" })
                        @Html.ValidationMessageFor(model => model.ID_LOAI_VAN_BAN, "", new { @class = "text-danger" })

                    </div>
                </div>
            </div>


            <div class="col-md-6" style="padding-top:15px;padding-left:160px">
                <div class="form-group">
                    <div clas="col-md-6">
                        @Html.LabelFor(model => model.NGAY_GOI, htmlAttributes: new {
                       @class = "control-label col-md-12" })
                    </div>
                    <div>
                        @Html.TextBoxFor(model => model.NGAY_GOI, htmlAttributes: new
                   {
                       @class = "form-control",
                       @style = "border: 1px solid #666666;width:190px",
                       @id = "datesend",
                       @readonly = "true",

                   })

                    </div>
                </div>

            </div>

            <div class="col-md-6">
                <div class="form-group" style="padding-left:65px;padding-top:15px">
                    <div clas="col-md-6">
                        @Html.LabelFor(model => model.TRANG_THAI_XU_LY, htmlAttributes: new {
                       @class = "control-label col-md-12" })
                    </div>

                    <div>
                        <select name="TRANG_THAI_XU_LY" style="border: 1px solid #666666;width:190px" class="form-control">
                            <option selected="selected" value="0">Chưa xử lý</option>
                            <option value="1">Đang xử lý</option>
                            <option value="2">Đã xử lý</option>
                        </select>
                    </div>
                    <div>
                        <input name="FILE_DINH_KEM" value="" id="danhsachdinhkem" type="hidden" />
                    </div>
                </div>
            </div>


            <input multiple type="file" id=fileUpload style="opacity:0" name="fileUpload" onchange="uploadFile()">
            <span id='val' class="d-none"></span>
            <span id='button' class="btn btn-info" style="width:160px"><b>Chọn file</b></span>
            <div style="padding-left:650px">
                <table class="table d-none" id="sheet" style="width:80px;"></table>
            </div>

            <div class="form-inline" style="padding-left:130px;padding-top:15px">
                <div class="form-group">
                    <div clas="col-md-6">
                        @Html.LabelFor(model => model.TRICH_YEU, htmlAttributes: new { @class = "control-label col-md-12" })
                    </div>
                    <div>
                        @Html.TextAreaFor(model => model.TRICH_YEU, new { htmlAttributes = new { @class = " form-control " }, cols = "114", rows = "4" })
                        @Html.ValidationMessageFor(model => model.TRICH_YEU, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <br />
            <div class="form-inline">
                <div class="col-md-6">
                    <div class="form-group" style="padding-bottom:10px;padding-top:10px;padding-left:109px">
                        <div class="form-inline">
                            <div class="form-group">
                                <div clas="col-md-6">
                                    <label>Thành phần:</label>
                                </div>
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

                                <div class="form-check">
                                    <input class="form-check-input" type="radio" checked name="radio1" onclick="hideDonVi()">
                                    <label class="form-check-label">Cá nhân</label>
                                </div>
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

                                <div class="form-check" style="padding-right:255px">
                                    <input class="form-check-input" type="radio" name="radio1" onclick="showDonVi()">
                                    <label class="form-check-label">Đơn vị</label>
                                </div>

                                <label>Danh sách nhận:</label>

                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class=" form-inline d-none" style="width:100%" id="formdonvi">
                <div class="col-md-6">
                    <div class="form-group" style="padding-top:5px;padding-left:215px">
                        <select id="dsdonvi" onchange="getNhanVienByDonVi(this)">
                            @foreach (var item in ViewBag.DonVis)
                            {
                                <option value="@item.ID_DON_VI">@item.TEN_DON_VI</option>
                            }
                        </select>
                    </div>
                </div>
            </div>
            <div class=" form-inline" style="width:100%">
                <div class="col-md-6">
                    <div class="form-group" style="padding-top:10px;padding-left:215px">
                        <table>
                            <tr style="border:0;">
                                <td style="border:0; vertical-align:top;text-align:left;height: 100%;">


                                    <select class="form-control" multiple="multiple" id="idnhanvien" size="10" style="width:404px; height:230px">
                                        @foreach (var item in ViewBag.NhanViens as List<Models.EF.NHANVIEN>)
                                        {
                                            <option value="@item.ID_NHAN_VIEN">@item.HO_TEN</option>
                                        }
                                    </select>
                                </td>
                                <td style="border:0; vertical-align:middle;text-align:center;padding-left:10px">

                                    <input class="btn-click btn btn-dark" type="button" id="rightall" value=">>" style="width:50px;" /><br />
                                    <input class="btn-click btn btn-dark" type="button" id="right" value=">" style="width:50px" /><br />
                                    <input class="btn-click btn btn-dark" type="button" id="left" value="<" style="width:50px" /><br />
                                    <input class="btn-click btn btn-dark" type="button" id="leftall" value="<<" style="width:50px" />

                                </td>
                                <td style="border:0; vertical-align:top;text-align:left;padding-left:10px;width:200px; height:120px">
                                    <select class="form-control" multiple name="NhanVienIds" id="nv" size="10" style="width:404px; height:230px"></select>
                                </td>

                            </tr>
                        </table>

                    </div>
                </div>
            </div>
            <div class="col-md-12" style="padding-left:910px">
                <div class="form-group" style="padding-top:10px">
                    <div clas="col-md-12">
                        <input type="submit" value="Lưu" class="btn btn-success" />
                        <input type="submit" value="Hủy" class="btn btn-danger" />
                    </div>
                </div>

            </div>
            
</section>
}

@section Scripts {
    <script src="~/Assets/admin/plugins/bootstrap4-duallistbox/jquery.bootstrap-duallistbox.min.js"></script>

    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>

    <script>
        // thay đổi giao diện nút upload file
        $('#button').click(function () {
            $("input[type='file']").trigger('click');
        })

        $("input[type='file']").change(function () {
            $('#val').text(this.value.replace(/C:\\fakepath\\/i, ''))
        })

        // thay đổi khi thêm bớt file
        var countFile = () => {
            let trs = document.getElementById('sheet').rows;
            let ids = [];
            let n = trs.length;
            document.getElementById('button').innerHTML = `Có ${n} file được chọn`;
            for (var i = 0; i < trs.length; i++) {
                ids.push(trs[i].cells[0].innerText)
            }
            danhsachdinhkem.value = ids.join(",");
        }
        //xóa file
        var removeFile = (e) => {
            let tr = e.parentNode.parentNode;
            let id = tr.cells[0].innerText;
            console.log({ id });
            $.ajax(
                {
                    url: '/Admin/VanBan/removeFile',
                    data: { id: id },
                    'async': false,
                    type: 'POST',
                    success: function (d) {
                        console.log(d);
                        //alert(d);
                        if (d == 1) {
                            $(e).closest('tr').remove();
                            countFile();
                        }
                    }
                }
            );
        }
        //upload file
        var uploadFile = () => {
            let rows = document.getElementById('sheet').getElementsByTagName('tr');
            console.log(`số dòng: ${rows.length}`);
            if (rows.length > 0) {
                let str = []
                for (var i = 0; i < rows.length; i++) {
                    let id = rows[i].cells[0].innerText;
                    str.push(id);
                }
                console.log(str);
                $.post('/Admin/VanBan/RemoveFiles', { ids: str }, (d) => {
                    if (d.length > 0) {
                        sheet.innerHTML = '';
                        upload();
                    }
                })
            } else {
                upload();
            }
        }
        //
        var upload = () => {
            let e = document.getElementById('fileUpload');
            let filenames = []
            var files = e.files;
            console.log(files.length);
            if (files.length > 0) {
                if (window.FormData !== undefined) {
                    var data = new FormData();
                    for (var i = 0; i < files.length; i++) {
                        filenames.push(files[i].name.split(" ").join(""));
                        data.append(files[i].name.split(" ").join(""), files[i]);
                    }
                }
                $.ajax(
                    {
                        url: '/Admin/VanBan/UploadFile',
                        data: data,
                        'async': false,
                        processData: false,
                        contentType: false,
                        type: 'POST',
                        success: function (d) {
                            console.log(d);
                            if (d == 1) {
                                str = '';
                                for (var i = 0; i < filenames.length; i++) {
                                    str += `<tr><td>${filenames[i]}</td><td><a onclick="removeFile(this);" class="btn btn-info">xóa</a></td></tr>`
                                }
                                document.getElementById('sheet').innerHTML = str;
                                document.getElementById('sheet').classList.remove('d-none');
                                countFile();
                            }
                        }
                    }
                );
            }

        }
        //Hiện danh sách đơn vị
        var showDonVi = () => {
            document.getElementById('formdonvi').classList.remove('d-none');
        }
        //ẩn danh sách đơn vị và hiện toàn bộ nhân viên
        var hideDonVi = () => {
            document.getElementById('formdonvi').classList.add('d-none');
            $.get('/Admin/VanBan/GetNhanVien', (d) => {
                console.log(d);
                let str = '';
                for (var i = 0; i < d.length; i++) {
                    str += `<option value="${d[i].ID_NHAN_VIEN}">${d[i].HO_TEN}</option>`
                }
                idnhanvien.innerHTML = str;
            })
            //idnhanvien
        }
        var getNhanVienByDonVi = (e) => {
            console.log(e.value);
            $.post('/Admin/VanBan/GetNhanVienByDonVi', { id: e.value }, (d) => {
                console.log(d);
                let str = '';
                for (var i = 0; i < d.length; i++) {
                    str += `<option value="${d[i].ID_NHAN_VIEN}">${d[i].HO_TEN}</option>`
                }
                idnhanvien.innerHTML = str;
            })
        }
        $(function () {
            function moveItems(origin, dest) {
                $(origin).find(':selected').appendTo(dest);
            }

            function moveAllItems(origin, dest) {
                $(origin).children().appendTo(dest);
            }

            $('#left').click(function () {
                moveItems('#nv', '#idnhanvien');
            });

            $('#right').on('click', function () {
                moveItems('#idnhanvien', '#nv');
            });

            $('#leftall').on('click', function () {
                moveAllItems('#nv', '#idnhanvien');
            });

            $('#rightall').on('click', function () {
                moveAllItems('#idnhanvien', '#nv');
            });
        });
    </script>



    <script src="~/Assets/admin/plugins/jquery/jquery-1.10.2.min.js"></script>
    <script src="~/Assets/admin/plugins/jquery/jquery.datetimepicker.full.js"></script>
    <script>

        var j1 = jQuery.noConflict();
        var timeArray = ['00:00', '00:30', '01:00', '01:30', '02:00', '02:30', '03:00', '03:30', '04:00', '04:30', '05:00', '05:30', '06:00', '06:30', '07:00', '07:30', '08:00', '08:30', '09:00', '09:30', '10:00', '10:30', '11:00', '11:30', '12:00', '12:30', '13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30', '17:00', '17:30', '18:00', '18:30', '19:00', '19:30', '20:00', '20:30', '21:00', '21:30', '22:00', '22:30', '23:00', '23:30', '23:59']
        j1.datetimepicker.setLocale('vi');

        j1("#datesend").datetimepicker({
            defaultDate: Date.now(),
            allowTimes: timeArray
        });
        j1("#datereceive").datetimepicker({
            defaultDate: Date.now(),
            allowTimes: timeArray
        });
        j1("#datesign").datetimepicker({
            defaultDate: Date.now(),
            allowTimes: timeArray
        });
    </script>

}

